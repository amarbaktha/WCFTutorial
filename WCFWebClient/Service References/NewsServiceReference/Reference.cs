//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFWebClient.NewsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsServiceReference.INewsService1")]
    public interface INewsService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService1/GetHeadlines", ReplyAction="http://tempuri.org/INewsService1/GetHeadlinesResponse")]
        string GetHeadlines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService1/GetHeadlines", ReplyAction="http://tempuri.org/INewsService1/GetHeadlinesResponse")]
        System.Threading.Tasks.Task<string> GetHeadlinesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsService1Channel : WCFWebClient.NewsServiceReference.INewsService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsService1Client : System.ServiceModel.ClientBase<WCFWebClient.NewsServiceReference.INewsService1>, WCFWebClient.NewsServiceReference.INewsService1 {
        
        public NewsService1Client() {
        }
        
        public NewsService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetHeadlines() {
            return base.Channel.GetHeadlines();
        }
        
        public System.Threading.Tasks.Task<string> GetHeadlinesAsync() {
            return base.Channel.GetHeadlinesAsync();
        }
    }
}
