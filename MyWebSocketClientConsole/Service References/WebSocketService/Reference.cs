//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWebSocketClientConsole.WebSocketService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebSocketService.IWSChatService")]
    public interface IWSChatService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWSChatService/SendMessageToServer")]
        void SendMessageToServer(string value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWSChatService/SendMessageToServer")]
        System.Threading.Tasks.Task SendMessageToServerAsync(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSChatServiceChannel : MyWebSocketClientConsole.WebSocketService.IWSChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSChatServiceClient : System.ServiceModel.ClientBase<MyWebSocketClientConsole.WebSocketService.IWSChatService>, MyWebSocketClientConsole.WebSocketService.IWSChatService {
        
        public WSChatServiceClient() {
        }
        
        public WSChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendMessageToServer(string value) {
            base.Channel.SendMessageToServer(value);
        }
        
        public System.Threading.Tasks.Task SendMessageToServerAsync(string value) {
            return base.Channel.SendMessageToServerAsync(value);
        }
    }
}
